# syntax=docker/dockerfile:labs
FROM ubuntu:rolling
ARG cpu_threads=4
ARG target_triplet
ARG kernel_version
ARG gmp_version=6.2.1
ARG mpfr_version=4.1.0
ARG mpc_version=1.2.1
ARG isl_version=0.25
ARG binutils_commit
ARG PREFIX=/opt/${target_triplet}
ENV PATH=${PREFIX}/bin:${PATH}

RUN \
  rm -f /etc/apt/apt.conf.d/docker-clean \
  && echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' \
           > /etc/apt/apt.conf.d/keep-cache \
  && mkdir -p ${PREFIX} \
  mkdir -p /source 
  
RUN --mount=type=cache,target=/var/cache/apt --mount=type=cache,target=/var/lib/apt \
    --mount=type=cache,target=/source \
  DEBIAN_FRONTEND=noninteractive \
  apt-get update \
  && apt-get install --yes \
        git \
        g++ \
        make \
        gawk \
        wget \
        rsync \
        m4 \
        flex \
        bison \
        build-essential \
        file \
        python3 \
        texinfo \
        libzstd-dev \
        pkg-config \
  && cd /source \
  && ( /usr/bin/test -d gmp-${gmp_version} \
       || wget -O - \
            https://gnu.mirror.constant.com/gmp/gmp-${gmp_version}.tar.xz \
          | tar xJf - ) \
  && ( /usr/bin/test -d mpfr-${mpfr_version} \
       || wget -O - \
            https://gnu.mirror.constant.com/mpfr/mpfr-${mpfr_version}.tar.xz \
          | tar xJf - ) \
  && ( /usr/bin/test -d mpfr-${mpc_version} \
       || wget -O - \
            https://gnu.mirror.constant.com/mpc/mpc-${mpc_version}.tar.gz \
          | tar xzf - ) \
  && ( /usr/bin/test -d isl-${isl_version} \
       || wget -O - \
            https://libisl.sourceforge.io/isl-${isl_version}.tar.xz \
          | tar xJf - ) \
  && ( /usr/bin/test -d linux-${kernel_version} \
       || wget -O - \
            https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-${kernel_version}.tar.gz \
          | tar xzf - ) \
  && ( /usr/bin/test -d binutils-gdb \
       || git clone --branch master --single-branch \
             git://sourceware.org/git/binutils-gdb.git ) \
  && ( /usr/bin/test -d glibc \
       || git clone --branch master --single-branch \
             https://sourceware.org/git/glibc.git ) \
  && ( /usr/bin/test -d gcc \
       || git clone --branch master --single-branch \
             git://gcc.gnu.org/git/gcc.git ) \
  && cd /
  

# make gmp
RUN --mount=type=cache,ro=true,target=/source \
  mkdir /gmp-build \
  && cd /gmp-build \
  && /source/gmp-${gmp_version}/configure \
        --prefix=$PREFIX \
        --enable-cxx \
        --disable-static \
  && make -j${cpu_threads} \
  && make install \
  && cd / \
  && rm -rf /gmp*


# make mpfr
RUN --mount=type=cache,ro=true,target=/source \
  mkdir /mpfr-build \
  && cd /mpfr-build \
  && LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
      /source/mpfr-${mpfr_version}/configure \
        --prefix=${PREFIX} \
        --with-gmp=${PREFIX} \
        --disable-static \
  && make -j${cpu_threads} \
  && make install \
  && cd / \
  && rm -rf /mpfr*


# make mpc
RUN --mount=type=cache,ro=true,target=/source \
  mkdir /mpc-build \
  && cd /mpc-build \
  && LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
     /source/mpc-${mpc_version}/configure \
       --prefix=${PREFIX} \
       --with-gmp=${PREFIX} \
       --with-mpfr=${PREFIX} \
        --disable-static \
  && make -j${cpu_threads} \
  && make install \
  && cd / \
  && rm -rf /mpc*


# make isl
RUN --mount=type=cache,ro=true,target=/source \
  mkdir /isl-build \
  && cd /isl-build \
  && LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
      /source/isl-${isl_version}/configure \
        --prefix=${PREFIX} \
        --with-gmp-prefix=${PREFIX} \
        --disable-static \
  && make -j${cpu_threads} \
  && make install \
  && cd / \
  && rm -rf /isl*


# make binutils
ARG SYSROOT=${PREFIX}/${target_triplet}/rootfs
ARG binutils_extra_config
RUN --mount=type=cache,ro=true,target=/source \
  mkdir -p ${SYSROOT} \
  && export MACHTYPE=$(gcc -dumpmachine) \
  && mkdir -p /binutils-build \
  && cd /binutils-build \
  && /source/binutils-gdb/configure \
    --prefix=${PREFIX} \
    --host=${MACHTYPE} \
    --target=${target_triplet} \
    --with-sysroot=${SYSROOT} \
    --with-gmp=${PREFIX} \
    --with-mpfr=${PREFIX} \
    --with-mpc=${PREFIX} \
    --with-isl=${PREFIX} \
    --enable-multilib \
    --disable-werror ${binutils_extra_config} \
  && make -j${cpu_threads} \
  && make install \
  && cd / \
  && rm -rf /binutils*


# make kernel headers
ARG kernel_arch
RUN --mount=type=cache,target=/source \
  mkdir -p ${SYSROOT} \
  && cd /source/linux-${kernel_version} \
  && make ARCH=${kernel_arch} \
      INSTALL_HDR_PATH=${SYSROOT}/usr headers_install \
  && cd / 

# make static-gcc
RUN --mount=type=cache,ro=true,target=/source \
  mkdir -p /gcc-build \
  && cd /gcc-build \
  && AR=ar LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
    /source/gcc/configure \
      --prefix=${PREFIX} \
      --target=${target_triplet} \
      --build=${MACHTYPE} \
      --host=${MACHTYPE} \
      --with-sysroot=${SYSROOT} \
      --with-native-system-header-dir=/usr/include \
      --without-headers \
      --with-newlib \
      --disable-shared \
      --disable-decimal-float \
      --disable-libgomp \
      --disable-libmudflap \
      --disable-libssp \
      --disable-libatomic \
      --disable-libitm \
      --disable-libsanitizer \
      --disable-libquadmath \
      --disable-threads \
      #--disable-target-zlib \
      #--with-system-zlib \
      --with-gmp=${PREFIX} \
      --with-mpfr=${PREFIX} \
      --with-mpc=${PREFIX} \
      --with-isl=${PREFIX} \
      --enable-multilib \
      --enable-languages=c \
      --enable-checking=release \
      --disable-werror \
  && make -j${cpu_threads} all-gcc all-target-libgcc \
  && make install-gcc install-target-libgcc \
  && cd / \
  && rm -rf gcc-build

# make glibc bit
# see https://sourceware.org/bugzilla/show_bug.cgi?id=24183
# NOTE: need install_root=$SYSROOT so that libc.so linker script has
# correct paths.
ARG glibc_commit
RUN --mount=type=cache,ro=true,target=/source \
  cd / \
  && mkdir /glibc-build \
  && cd /glibc-build \
  && export MACHTYPE=$(gcc -dumpmachine) \
  && BUILD_CC="gcc" CC="${target_triplet}-gcc" \
     CXX=${target_triplet}-g++ \
     AR="${target_triplet}-ar" RANLIB="${target_triplet}-ranlib" \
    /source/glibc/configure \
      --host=${target_triplet} \
      --build=${MACHTYPE} \
      --prefix=/usr \
      --libdir=/usr/lib64 \
      --with-headers=${SYSROOT}/usr/include \
      --with-binutils=${PREFIX}/bin \
      --enable-kernel=$(echo ${kernel_version} | cut -d- -f1) \
      --enable-shared \
      --disable-profile \
      --disable-werror ${glibc_extra_config} \
  && make -j${cpu_threads} \
  && make install install_root=${SYSROOT} \
  && mkdir -p ${SYSROOT}/usr/lib \
  && ( ( /usr/bin/test -d ${SYSROOT}/lib \
         && cp -a ${SYSROOT}/lib/* ${SYSROOT}/usr/lib64 \
         && rm -rf ${SYSROOT}/lib ) || true ) \
  && ( ( /usr/bin/test -d ${SYSROOT}/lib64 \
         && cp -a ${SYSROOT}/lib64/* ${SYSROOT}/usr/lib64 \
         && rm -rf ${SYSROOT}/lib64 ) || true ) \
  && ( ( /usr/bin/test -d ${SYSROOT}/usr/lib \
         && cp -a ${SYSROOT}/usr/lib/* ${SYSROOT}/usr/lib64 \
         && rm -rf ${SYSROOT}/usr/lib ) || true ) \
  && ln -s usr/lib64 ${SYSROOT}/lib \
  && ln -s usr/lib64 ${SYSROOT}/lib64 \
  && ln -s lib64 ${SYSROOT}/usr/lib \
  && cd ${PREFIX}/${target_triplet} \
  && ( ( /usr/bin/test -d lib \
         && cp -a lib/* ${SYSROOT}/usr/lib64/ \
         && rm -r lib ) || true ) \
  && ( ( /usr/bin/test -d lib \
         && cp -a lib64/* ${SYSROOT}/usr/lib64/ \
         && rm -r lib64 ) || true ) \
  && ln -s ${SYSROOT}/usr/lib64 lib \
  && ln -s ${SYSROOT}/usr/lib64 lib64 \
  && cd / \
  && rm -rf /glibc*

## make final compiler
RUN --mount=type=cache,ro=true,target=/source \
  mkdir gcc-build \
  && cd /gcc-build \
  && export MACHTYPE=$(gcc -dumpmachine) \
  && AR=ar LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
      /source/gcc/configure \
          --prefix=${PREFIX} \
          --target=${target_triplet} \
          --host=${MACHTYPE} \
          --build=${MACHTYPE} \
          --with-sysroot=${SYSROOT} \
          --with-native-system-header-dir=/usr/include \
          --enable-languages=c,c++ \
          --enable-threads=posix \
          --with-mpc=${PREFIX} \
          --with-mpfr=${PREFIX} \
          --with-gmp=${PREFIX} \
          --with-isl=${PREFIX} \
          --enable-multilib \
          --enable-checking=release \
          ${gcc_extra_config} \
  && make AS_FOR_TARGET=${target_triplet}-as \
          LD_FOR_TARGET=${target_triplet}-ld \
          -j${cpu_threads} \
  && make install \
  && cd ${PREFIX}/${target_triplet} \
  && cp -a include/* ${SYSROOT}/usr/include \
  && rm -rf include \
  && cd / \
  && rm -rf /gcc*

## clean up
RUN \
  cd / \
  && ln -s ${SYSROOT}/usr/include ${PREFIX}/${target_triplet}/include \
  && ((find $PREFIX -not -type d -executable \
        | xargs file \
        | grep ELF \
        | grep -v "LSB shared object" \
        | grep -v "SYSV" \
        | cut -d: -f1 \
        | xargs strip 2>/dev/null) || true) \
  && apt-get remove --yes \
        git \
        g++ \
        make \
        gawk \
        wget \
        rsync \
        m4 \
        flex \
        bison \
        build-essential \
        file \
        texinfo \
        python3 

