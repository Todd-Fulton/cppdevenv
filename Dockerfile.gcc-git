# syntax=docker/dockerfile:labs
FROM gccsrc as source

# update source if REBUILD
WORKDIR /gcc-source
# timestamp to force git pull
ARG timestamp
RUN <<-EOF
    apt-get update
    DEBIAN_FRONTEND=noninteractive apt-get full-upgrade --yes
    git pull
EOF


FROM source AS builder
# timestamp to force rebuild
ARG timestamp
ARG cpu_threads=6
ARG cflags
ARG cxxflags
RUN <<-EOF
    mkdir /opt/gcc-git
    mkdir /gcc-build-native
    cd /gcc-build-native
    export CFLAGS="${cflags}"
    export CXXFLAGS="${cxxflags}"
    /gcc-source/configure \
        --enable-languages=c,c++ \
        --disable-multilib \
        --enable-libstdcxx-backtrace=yes \
        --enable-lto \
        --prefix=/opt/gcc-git
    make -j${cpu_threads}
    make install
    unset CFLAGS
    unset CXXFLAGS
EOF

FROM baseimg AS copier
# copy from /opt/gcc-git in final image
RUN mkdir /opt/gcc-git
# timestamp to force recopy
ARG timestamp
COPY --from=builder /opt/gcc-git /opt/gcc-git

RUN <<-EOF
  DEBIAN_FRONTEND=noninteractive \
    apt-get install --yes file binutils
  # Strip binaries
  find /opt/gcc-git -not -type d -executable | \
	xargs file | \
	grep ELF | \
	cut -d: -f 1 | \
	xargs strip
EOF


FROM copier AS finalizer
WORKDIR /opt/gcc-git
RUN <<-EOF
  # install deps for gcc
  DEBIAN_FRONTEND=noninteractive \
    apt-get install --yes \
    libgmp10 \
    libmpfr6 \
    libmpc3 \
    libisl23 \
    libzstd1 \
    libc-dev-bin libc-devtools libc6-dev
  DEBIAN_FRONTEND=noninteractive \
    apt-get remove gcc file --yes && \
    apt-get autoremove --yes && \
    apt-get autoclean --yes && \
    rm -rf /var/lib/apt/lists/*
EOF

WORKDIR /root
