# syntax=docker/dockerfile:labs
FROM ubuntu:rolling
ARG cpu_threads=4
ARG target_triplet
ARG glibc_commit
ARG binutils_commit
ARG binutils_extra_config
ARG gcc_commit
ARG gmp_version=6.2.1
ARG mpfr_version=4.1.0
ARG mpc_version=1.2.1
ARG isl_version=0.25
ARG kernel_version
ARG kernel_arch
ARG target_triplet
ARG PREFIX=/opt/${target_triplet}
ARG SYSROOT=${PREFIX}/${target_triplet}
ENV PATH=${PREFIX}/bin:${PATH}

# dependencies and sources
RUN \
  DEBIAN_FRONTEND=noninteractive \
  apt-get update \
  && apt-get install --yes \
        git \
        g++ \
        make \
        gawk \
        wget \
        rsync \
        m4 \
        flex \
        bison \
        build-essential \
        file \
        python3 \
        texinfo \
        libzstd-dev \
        pkg-config \
  && cd / \
  && git clone --branch master --single-branch git://sourceware.org/git/binutils-gdb.git \
  && git clone --branch master --single-branch git://gcc.gnu.org/git/gcc.git \
  && git clone https://sourceware.org/git/glibc.git \
  && wget https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/snapshot/linux-${kernel_version}.tar.gz -O - | tar xzf - \
  && wget https://gnu.mirror.constant.com/gmp/gmp-${gmp_version}.tar.xz -O - | tar xvJf - \
  && wget https://gnu.mirror.constant.com/mpfr/mpfr-${mpfr_version}.tar.xz -O - | tar xvJf - \
  && wget https://gnu.mirror.constant.com/mpc/mpc-${mpc_version}.tar.gz -O - | tar xvzf - \
  && wget https://libisl.sourceforge.io/isl-${isl_version}.tar.xz -O - | tar xvJf - \
  && cd /


# setup sysroot
RUN \
  mkdir -p ${SYSROOT}/usr/{lib,bin} \
  && ln -s usr/lib $SYSROOT/lib \
  && ln -s usr/lib $SYSROOT/lib64 \
  && ln -s usr/bin $SYSROOT/bin \
  && ln -s usr/bin $SYSROOT/sbin \
  && ln -s bin $SYSROOT/usr/sbin \
  && ln -s lib $SYSROOT/usr/lib64

# make gmp
RUN \
  mkdir /gmp-build \
  && cd /gmp-build \
  && ../gmp-${gmp_version}/configure \
        --prefix=$PREFIX \
        --enable-cxx \
        --disable-static \
  && make -j${cpu_threads} \
  && make install \
  && cd /

# make mpfr
RUN \
  mkdir /mpfr-build \
  && cd /mpfr-build \
  && LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
      ../mpfr-${mpfr_version}/configure \
        --prefix=${PREFIX} \
        --with-gmp=${PREFIX} \
        --disable-static \
  && make -j${cpu_threads} \
  && make install \
  && cd /

# make mpc
RUN \
  mkdir /mpc-build \
  && cd /mpc-build \
  && LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
     ../mpc-${mpc_version}/configure \
       --prefix=${PREFIX} \
       --with-gmp=${PREFIX} \
       --with-mpfr=${PREFIX} \
        --disable-static \
  && make -j${cpu_threads} \
  && make install \
  && cd /

# make isl
RUN \
  mkdir /isl-build \
  && cd /isl-build \
  && LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
      ../isl-${isl_version}/configure \
        --prefix=${PREFIX} \
        --with-gmp-prefix=${PREFIX} \
        --disable-static \
  && make -j${cpu_threads} \
  && make install \
  && cd /


# make binutils
RUN \
  cd /binutils-gdb \
  && git pull \
  && git checkout ${binutils_commit} \
  && mkdir -p /binutils-build \
  && cd /binutils-build \
  && /binutils-gdb/configure \
    --prefix=${PREFIX} \
    --host=${MACHTYPE} \
    --target=${target_triplet} \
    --with-sysroot=${SYSROOT} \
    --with-gmp=${PREFIX} \
    --with-mpfr=${PREFIX} \
    --with-mpc=${PREFIX} \
    --with-isl=${PREFIX} \
    --disable-multilib \
    --disable-werror ${binutils_extra_config} \
  && make -j${cpu_threads} \
  && make install \
  && cd / \
  && rm -rf /binutils*

# make kernel headers
RUN \
  mkdir -p /opt/${target_triplet}/${target_triplet} \
  && cd linux-${kernel_version} \
  && make ARCH=${kernel_arch} \
      INSTALL_HDR_PATH=/opt/${target_triplet}/${target_triplet}/usr \
      headers_install \
  && cd / \
  && rm -rf /linux-${kernel_version}*

# make static-gcc
RUN \
  cd /gcc \
  && git pull \
  && git checkout ${gcc_commit} \
  && touch ${SYSROOT}/usr/include/limits.h \
  && ln -s usr/include ${SYSROOT}/sys-include \
  && mkdir -p /gcc-build \
  && cd /gcc-build \
  && AR=ar LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
    /gcc/configure \
      --prefix=${PREFIX} \
      --target=${target_triplet} \
      --build=${MACHTYPE} \
      --host=${MACHTYPE} \
      --with-sysroot=$SYSROOT \
      --with-native-system-header-dir=/usr/include \
      --without-headers \
      --with-newlib \
      --disable-shared \
      --disable-decimal-float \
      --disable-libgomp \
      --disable-libmudflap \
      --disable-libssp \
      --disable-libatomic \
      --disable-libitm \
      --disable-libsanitizer \
      --disable-libquadmath \
      --disable-threads \
      #--disable-target-zlib \
      #--with-system-zlib \
      --with-gmp=${PREFIX} \
      --with-mpfr=${PREFIX} \
      --with-mpc=${PREFIX} \
      --with-isl=${PREFIX} \
      --enable-languages=c \
      --enable-checking=release \
      --disable-multilib \
      --disable-werror \
  && make -j${cpu_threads} all-gcc all-target-libgcc \
  && make install-gcc install-target-libgcc \
  && cd /

# make glibc 
# see https://sourceware.org/bugzilla/show_bug.cgi?id=24183
# NOTE: need install_root=$SYSROOT so that libc.so linker script has
# correct paths.
RUN \
  cd / \
  && cd /glibc \
  && git pull \
  && git checkout ${glibc_commit} \
  && mkdir /glibc-build \
  && cd /glibc-build \
  && BUILD_CC="gcc" CC="${target_triplet}-gcc" \
     CXX=${target_triplet}-g++ \
     AR="${target_triplet}-ar" RANLIB="${target_triplet}-ranlib" \
   /glibc/configure \
      --prefix=/usr \
      --host=${target_triplet} \
      --build=$MACHTYPE \
      --enable-kernel=$(echo ${kernel_version} | cut -d- -f1) \
      --with-headers=$SYSROOT/usr/include \
      --with-binutils=${PREFIX}/bin \
      --disable-multi-arch \
      --disable-profile \
      --disable-werror ${glibc_extra_config} \
  && make -j${cpu_threads} \
  && make install install_root=$SYSROOT \
  && cd /


# TODO: Add gcc_extra_config
## make final compiler
RUN \
  cd /gcc-build \
  && make distclean \
  && AR=ar LDFLAGS="-Wl,-rpath,${PREFIX}/lib" \
      /gcc/configure \
          --prefix=${PREFIX} \
          --target=${target_triplet} \
          --host=${MACHTYPE} \
          --build=${MACHTYPE} \
          --with-sysroot=${SYSROOT} \
          --with-native-system-header-dir=/usr/include \
          --disable-static \
          --enable-languages=c,c++ \
          --enable-threads=posix \
          --enable-tls \
          --enable-__cxa_atexit \
          --with-mpc=${PREFIX} \
          --with-mpfr=${PREFIX} \
          --with-gmp=${PREFIX} \
          --with-isl=${PREFIX} \
          #--with-system-zlib \
          --disable-multilib \
          --enable-checking=release \
          --enable-libstdcxx-time \
          ${gcc_extra_config} \
  && make AS_FOR_TARGET=${target_triplet}-as \
          LD_FOR_TARGET=${target_triplet}-ld \
          -j${cpu_threads} \
  && make install

## clean up
RUN \
  cd / \
  && rm -rf \
        /gcc* \
        /binutils* \
        /glibc* \
        /isl* \
        /gmp* \
        /mpc* \
        /mpfr* \
        /linux-* \
  && ((find $PREFIX -not -type d -executable \
        | xargs file \
        | grep ELF \
        | grep -v "LSB shared object" \
        | grep -v "SYSV" \
        | cut -d: -f1 \
        | xargs strip 2>/dev/null) || true) \
  && apt-get remove --yes \
        git \
        g++ \
        make \
        gawk \
        wget \
        rsync \
        m4 \
        flex \
        bison \
        build-essential \
        file \
        texinfo \
        python3 \
  && apt-get autoremove --yes \
  && apt-get autoclean --yes \
  && rm -rf /var/lib/apt/lists/*

